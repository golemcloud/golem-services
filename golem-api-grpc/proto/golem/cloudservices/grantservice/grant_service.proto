syntax = "proto3";

package golem.cloudservices.grantservice;

import public "golem/account_id.proto";
import public "golem/empty.proto";
import public "golem/grant_error.proto";
import public "golem/role.proto";
import public "golem/token_secret.proto";

service GrantService {
  rpc GetGrants (GetGrantsRequest) returns (GetGrantsResponse);
  rpc DeleteGrant (DeleteGrantRequest) returns (DeleteGrantResponse);
  rpc GetGrant (GetGrantRequest) returns (GetGrantResponse);
  rpc PutGrant (PutGrantRequest) returns (PutGrantResponse);
}

message GetGrantsRequest {
  AccountId accountId = 1;
  TokenSecret tokenSecret = 2;
}

message GetGrantsResponse {
  oneof result {
    GetGrantsSuccessResponse success = 1;
    GrantError error = 2;
  }
}

message GetGrantsSuccessResponse {
  repeated Role roles = 1;
}

message DeleteGrantRequest {
  AccountId accountId = 1;
  Role role = 2;
  TokenSecret tokenSecret = 3;
}

message DeleteGrantResponse {
  oneof result {
    Empty success = 1;
    GrantError error = 2;
  }
}

message GetGrantRequest {
  AccountId accountId = 1;
  Role role = 2;
  TokenSecret tokenSecret = 3;
}

message GetGrantResponse {
  oneof result {
    Role role = 1;
    GrantError error = 2;
  }
}

message PutGrantRequest {
  AccountId accountId = 1;
  Role role = 2;
  TokenSecret tokenSecret = 3;
}

message PutGrantResponse {
  oneof result {
    Role role = 1;
    GrantError error = 2;
  }
}
