syntax = "proto3";

package golem.cloud.projectgrant;

import public "golem/common/empty.proto";
import public "golem/cloud/common/grant_id.proto";
import public "golem/cloud/common/project_id.proto";
import public "golem/cloud/common/project_grant.proto";
import public "golem/cloud/common/project_grant_error.proto";
import public "golem/cloud/common/project_grant_data_request.proto";

service ProjectGrantService {
  rpc GetProjectGrants (GetProjectGrantsRequest) returns (GetProjectGrantsResponse);
  rpc DeleteProjectGrant (DeleteProjectGrantRequest) returns (DeleteProjectGrantResponse);
  rpc GetProjectGrant (GetProjectGrantRequest) returns (GetProjectGrantResponse);
  rpc CreateProjectGrant (CreateProjectGrantRequest) returns (CreateProjectGrantResponse);
}

message GetProjectGrantsRequest {
  golem.cloud.common.ProjectId projectId = 1;
}

message GetProjectGrantsResponse {
  oneof result {
    GetProjectGrantsSuccessResponse success = 1;
    golem.cloud.common.ProjectGrantError error = 2;
  }
}

message GetProjectGrantsSuccessResponse {
  repeated golem.cloud.common.ProjectGrant data = 1;
}

message DeleteProjectGrantRequest {
  golem.cloud.common.ProjectId projectId = 1;
  golem.cloud.common.GrantId grantId = 2;
}

message DeleteProjectGrantResponse {
  oneof result {
    golem.common.Empty success = 1;
    golem.cloud.common.ProjectGrantError error = 2;
  }
}

message GetProjectGrantRequest {
  golem.cloud.common.ProjectId projectId = 1;
  golem.cloud.common.GrantId grantId = 2;
}

message GetProjectGrantResponse {
  oneof result {
    golem.cloud.common.ProjectGrant success = 1;
    golem.cloud.common.ProjectGrantError error = 2;
  }
}

message CreateProjectGrantRequest {
  golem.cloud.common.ProjectId projectId = 1;
  golem.cloud.common.ProjectGrantDataRequest data = 2;
}

message CreateProjectGrantResponse {
  oneof result {
    golem.cloud.common.ProjectGrant success = 1;
    golem.cloud.common.ProjectGrantError error = 2;
  }
}