syntax = "proto3";

package golem.cloudservices.accountservice;

import public "golem/common/empty.proto";
import public "golem/common/account.proto";
import public "golem/common/account_id.proto";
import public "golem/common/account_data.proto";
import public "golem/common/account_error.proto";
import public "golem/common/plan.proto";
import public "golem/common/token_secret.proto";

service AccountService {
  rpc DeleteAccount (AccountDeleteRequest) returns (AccountDeleteResponse);
  rpc GetAccount (AccountGetRequest) returns (AccountGetResponse);
  rpc GetPlan (AccountGetPlanRequest) returns (AccountGetPlanResponse);
  rpc UpdateAccount (AccountUpdateRequest) returns (AccountUpdateResponse);
  rpc CreateAccount (AccountCreateRequest) returns (AccountCreateResponse);
}

message AccountDeleteRequest {
  golem.common.AccountId accountId = 1;
}

message AccountDeleteResponse {
  oneof result {
    golem.common.Empty success = 1;
    golem.common.AccountError error = 2;
  }
}

message AccountGetRequest {
  golem.common.AccountId accountId = 1;
  golem.common.TokenSecret tokenSecret = 2;
}

message AccountGetResponse {
  oneof result {
    golem.common.Account account = 1;
    golem.common.AccountError error = 2;
  }
}

message AccountGetPlanRequest {
  golem.common.AccountId accountId = 1;
  golem.common.TokenSecret tokenSecret = 2;
}

message AccountGetPlanResponse {
  oneof result {
    golem.common.Plan plan = 1;
    golem.common.AccountError error = 2;
  }
}

message AccountUpdateRequest {
  golem.common.AccountId accountId = 1;
  golem.common.AccountData accountData = 2;
  golem.common.TokenSecret tokenSecret = 3;
}

message AccountUpdateResponse {
  oneof result {
    golem.common.Account account = 1;
    golem.common.AccountError error = 2;
  }
}

message AccountCreateRequest {
  golem.common.AccountData accountData = 1;
  golem.common.TokenSecret tokenSecret = 2;
}

message AccountCreateResponse {
  oneof result {
    golem.common.Account account = 1;
    golem.common.AccountError error = 2;
  }
}
